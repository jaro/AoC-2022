import XCTest
@testable import AoC

final class AoCTests: XCTestCase {
    var input = ["Monkey 0:",
                 "  Starting items: 79, 98",
                 "  Operation: new = old * 19",
                 "  Test: divisible by 23",
                 "    If true: throw to monkey 2",
                 "    If false: throw to monkey 3",
                 "",
                 "Monkey 1:",
                 "  Starting items: 54, 65, 75, 74",
                 "  Operation: new = old + 6",
                 "  Test: divisible by 19",
                 "    If true: throw to monkey 2",
                 "    If false: throw to monkey 0",
                 "",
                 "Monkey 2:",
                 "  Starting items: 79, 60, 97",
                 "  Operation: new = old * old",
                 "  Test: divisible by 13",
                 "    If true: throw to monkey 1",
                 "    If false: throw to monkey 3",
                 "",
                 "Monkey 3:",
                 "  Starting items: 74",
                 "  Operation: new = old + 3",
                 "  Test: divisible by 17",
                 "    If true: throw to monkey 0",
                 "    If false: throw to monkey 1"]
    let input2 = ["Monkey 0:",
    "Starting items: 85, 77, 77",
    "Operation: new = old * 7",
    "Test: divisible by 19",
    "  If true: throw to monkey 6",
    "  If false: throw to monkey 7",
"",
  "Monkey 1:",
   " Starting items: 80, 99",
   " Operation: new = old * 11",
   " Test: divisible by 3",
   "   If true: throw to monkey 3",
   "   If false: throw to monkey 5",
"",
 "Monkey 2:",
  "  Starting items: 74, 60, 74, 63, 86, 92, 80",
  "  Operation: new = old + 8",
  "  Test: divisible by 13",
  "    If true: throw to monkey 0",
  "    If false: throw to monkey 6",
"",
  "Monkey 3:",
  "  Starting items: 71, 58, 93, 65, 80, 68, 54, 71",
  "  Operation: new = old + 7",
  "  Test: divisible by 7",
  "    If true: throw to monkey 2",
  "    If false: throw to monkey 4",
"",
  "Monkey 4:",
   " Starting items: 97, 56, 79, 65, 58",
   " Operation: new = old + 5",
   " Test: divisible by 5",
   "   If true: throw to monkey 2",
   "   If false: throw to monkey 0",
"",
  "Monkey 5:",
   " Starting items: 77",
   " Operation: new = old + 4",
   " Test: divisible by 11",
   "   If true: throw to monkey 4",
   "   If false: throw to monkey 3",
"",
  "Monkey 6:",
  "  Starting items: 99, 90, 84, 50",
  "  Operation: new = old * old",
  "  Test: divisible by 17",
  "    If true: throw to monkey 7",
  "    If false: throw to monkey 1",
"",
  "Monkey 7:",
  "  Starting items: 50, 66, 61, 92, 64, 78",
  "  Operation: new = old + 3",
  "  Test: divisible by 2",
  "    If true: throw to monkey 5",
  "    If false: throw to monkey 1"]
    
    func testSolution1() throws {
        XCTAssertEqual(AoC(input2).getSolutionPart1(), 10605)
    }
    
    func testSolution2() throws {
        XCTAssertEqual(AoC(input2).getSolutionPart2(), 36)
    }
}
